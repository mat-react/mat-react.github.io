{"version":3,"file":"static/js/237.0825ce49.chunk.js","mappings":"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","sources":["Components/Code/CodeHLJS.js","Components/UI/Toast/Toast.js","Components/UI/Toast/index.js","Components/Code/CodeDisplay.js","app.config.js","Components/UI/Button/index.js","Components/UI/Cards/Default.jsx","Pages/UI/Components/ButtonPage.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\n\nimport hljs from 'highlight.js/lib/core';\n\nimport javascript from 'highlight.js/lib/languages/javascript';\nimport xml from 'highlight.js/lib/languages/xml'; // This is the JSX language\n\nimport 'highlight.js/styles/atom-one-dark.css';\n// import 'highlight.js/styles/atom-one-dark-reasonable.css'; \n\nhljs.registerLanguage('javascript', javascript);\nhljs.registerLanguage('xml', xml);\n\nfunction CodeHLJS({ children }) {\n  const codeRef = useRef();\n\n  useEffect(() => {\n    hljs.highlightBlock(codeRef.current);\n  }, []);\n\n  const style = {\n      backgroundColor: \"#000f2c\"\n  }\n\n  return (\n    <pre className='rounded-md overflow-hidden mt-2'>\n        <code ref={codeRef} className=\"language-jsx bg:primary-500\" style={style}>\n            {children}\n        </code>\n    </pre> \n  );\n}\n\nexport default CodeHLJS;\n","import React from 'react';\n\n\nimport Snackbar from '@mui/material/Snackbar';\nimport MuiAlert from '@mui/material/Alert';\n\nconst Alert = React.forwardRef(function Alert(props, ref) {\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n});\n\nexport const Toast = ({open, message, onClose}) => {\n\n    // if(typeof close !== \"function\"){\n    //     close = function() {return false}\n    // }\n\n    // className=\"!bg-primary-600 !py-0 !px-2\"\n\n    return (\n        <Snackbar anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }} open={open} autoHideDuration={3000} onClose={onClose}>\n          <Alert className=\"!py-0 !px-2\" onClose={onClose} severity=\"success\" sx={{ width: '100%' }}>\n            {message}\n          </Alert>\n        </Snackbar>\n    );\n}\n","import { Toast } from \"./Toast\";\n\nexport default Toast","import React, {useState} from \"react\";\n\nimport CodeHLJS from \"./CodeHLJS\";\n\nimport { Collapse } from \"@mui/material\";\nimport { Code, ContentCopy } from \"@mui/icons-material\";\n\nimport { RoundedButton } from \"../../Components/UI/Button\";\nimport Toast from \"../../Components/UI/Toast\";\n\n\nfunction CodeDisplay({ children }) {\n\n  const [open, setOpen] = useState(false)\n  const [toast, setToastOpen] = useState(false)\n\n\n  const toastClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setToastOpen(false);\n  };\n\n  const copyToClipboard = (text) => {\n    const textArea = document.createElement('textarea');\n    textArea.value = text;\n    document.body.appendChild(textArea);\n    textArea.select();\n    document.execCommand('copy');\n    document.body.removeChild(textArea);\n    \n    setToastOpen(true);\n  }\n\n  return (\n    <div>\n        <div className='flex align-center justify-end'>\n            <RoundedButton onClick={() => copyToClipboard(children)}><ContentCopy className=\"!w-4 !h-4\" /></RoundedButton>\n            <RoundedButton onClick={() => setOpen(!open)}><Code className=\"!w-5 !h-5\" /></RoundedButton>\n        </div>\n\n        <Toast message=\"Code copied\" open={toast} onClose={toastClose} />\n          \n        <Collapse in={open}>\n            <CodeHLJS>{children}</CodeHLJS>\n        </Collapse>\n\n    </div>\n  );\n}\n\nexport default CodeDisplay;\n","const AppConfig = {\n    app: {\n      title: 'My app',\n  \n      panels: [],\n  \n      // configure error page\n      error: {},\n  \n      // layout configuration...\n    },\n  \n    ui: {\n\n      // define default shapes\n      defaultShape: {\n\n        button: \"rounded\",\n\n      },\n    },\n  }\n\n  export default AppConfig","import { IconButton } from \"@mui/material\"\nimport AppConfig from \"../../../app.config\";\nimport { Link } from \"react-router-dom\";\n\nexport const RoundedButton = ({children, className, color = \"muted-400\", ...props}) => {\n\n    const baseClasses = `!text-${color} dark:!text-white hover:!bg-primary-500/20 flex h-7 w-7 items-center justify-center rounded-full transition-all duration-300 hover:!text-primary`;\n    const classes = `${baseClasses} ${className || ''}`.trim();\n\n    return (\n        <IconButton {...props} className={classes}>\n            {children}\n        </IconButton>\n    ) \n}\n\nconst RoundedOptions = {\n    NONE: \"straight\",\n    CURVED: \"curved\",\n    FULL: \"full\"\n};\n\nconst ColorOptions = {\n    PRIMARY: \"primary\",\n    INFO: \"info\",\n    SUCCESS: \"success\",\n    WARNING: \"warning\",\n    DANGER: \"danger\",\n    MUTED: \"muted\",\n};\n\nconst SizeOptions = {\n    sm: \"sm\", \n    md: \"md\", \n    xl: \"xl\", \n    xxl: \"xxl\"\n}\n\nconst TypeOptions = {\n    solid: \"solid\", \n    outline: \"outline\", \n    pastel: \"pastel\", \n}\n\n\nconst Button = ({\n        children, className, shadow, \n        shape=AppConfig.ui.defaultShape.button ?? \"rounded\", \n        to, color, size, type, ...props \n    }) => {\n\n\n    let buttonClasses = \"button\"\n\n    let roundedClass = \"rounded\"\n    if(shape === RoundedOptions.CURVED){\n        roundedClass = \"rounded-xl \";\n    }else if(shape === RoundedOptions.NONE){\n        roundedClass = \"\"\n    }else if(shape === RoundedOptions.FULL){\n        roundedClass = \"rounded-full\"\n    }\n    buttonClasses += \" \" + roundedClass\n\n\n    let colorClasses = \"button-default\"\n    if(color === \"primary\" || color === \"info\" || color === \"success\" || color === \"warning\" || color === \"danger\" || color === \"muted\"){\n        if(color === ColorOptions.MUTED){\n            colorClasses = \"border text-muted-500 bg-muted-200 border-muted-200 dark:text-white dark:bg-muted-700 dark:border-muted-700 dark:hover:enabled:bg-muted-600 dark:focus-visible:bg-muted-600 hover:enabled:bg-muted-100 focus-visible:bg-muted-100 active:enabled:bg-muted-200 dark:active:enabled:bg-muted-700\";\n        }else {\n            colorClasses = `bg-${color}-500 dark:bg-${color}-500 hover:enabled:bg-${color}-400 dark:hover:enabled:bg-${color}-400 text-white focus-visible:outline-${color}-400/70 focus-within:outline-${color}-400/70 focus-visible:bg-${color}-500 active:enabled:bg-${color}-500 dark:focus-visible:outline-${color}-400 dark:focus-within:outline-${color}-400 dark:focus-visible:bg-${color}-500 dark:active:enabled:bg-${color}-500`\n        }\n    }\n    \n\n    switch (type) {\n        case TypeOptions.outline:\n            // colorClasses = \"bg-primary-500 dark:bg-primary-500 hover:enabled:bg-primary-400 dark:hover:enabled:bg-primary-400 text-white focus-visible:outline-primary-400/70 focus-within:outline-primary-400/70 focus-visible:bg-primary-500 active:enabled:bg-primary-500 dark:focus-visible:outline-primary-400 dark:focus-within:outline-primary-400 dark:focus-visible:bg-primary-500 dark:active:enabled:bg-primary-500\";\n            break;\n        case TypeOptions.pastel:\n            // colorClasses = \"bg-info-500 dark:bg-info-500 text-white hover:enabled:bg-info-400 dark:hover:enabled:bg-info-400 focus-visible:outline-info-400/70 focus-within:outline-info-400/70 focus-visible:bg-info-500 active:enabled:bg-info-500 dark:focus-visible:outline-info-400/70 dark:focus-within:outline-info-400/70 dark:focus-visible:bg-info-500 dark:active:enabled:bg-info-500\";\n            break;\n        default:\n    }\n\n\n    let sizeClasses = \"\"\n    switch(size) {\n        case SizeOptions.sm:\n            sizeClasses = \"button-sm\"\n            break\n        case SizeOptions.xl:\n            sizeClasses = \"button-xl\"\n            break\n        case SizeOptions.xxl:\n            sizeClasses = \"button-xxl\"\n            break\n        default:\n    }\n\n    buttonClasses += \" \" + colorClasses + \" \" + sizeClasses\n\n    return (\n        <>\n            {to ? <Link className={buttonClasses} to={to} {...props} >{children}</Link> : <button className={buttonClasses} {...props}>{children}</button>}\n            \n        </>\n    )\n\n}\n\n\nexport default Button","import React from 'react';\n\nexport const DefaultCard = ({children, className = \"\"}) => {\n    return (\n        <div className={[\"border-muted-200 dark:border-muted-700 dark:bg-muted-800 relative w-full border bg-white transition-all duration-300 rounded-xl p-4\", className].join(\" \")}>\n            {children}\n        </div>\n    );\n}\n\nexport const DefaultCardHeader = (props) => {\n    return (\n        <div>\n            <div className='mb-4 flex items-center justify-between'>\n                {props.children}\n            </div>\n        </div>\n    );\n}\n\nexport const DefaultCardFooter = ({children}) => {\n    return (\n        <div className='px-4 py-2 bg-muted-100 border-t dark:border-muted-900 dark:bg-muted-700'>\n            {children}\n        </div>\n    );\n}\n\nexport const DefaultCardText = ({className = \"\", title = false, text = \"\", color = \"muted-400\"}) => {\n    return (\n        <div className={className}>\n            {\n                title ? <h3 className=\"font-heading text-base font-medium leading-tight text-muted-800 mb-1 dark:text-white\">\n                    <span>{title}</span>\n                </h3> : \"\"\n            }\n            <p className={\"font-alt text-xs font-normal leading-normal\"}>\n                <span className={`text-${color}`}>\n                    {text}\n                </span>\n            </p>\n        </div>\n    );\n}","import React from 'react';\n\nimport CodeDisplay from '../../../Components/Code/CodeDisplay';\n\nimport { DefaultCard, DefaultCardFooter } from '../../../Components/UI/Cards/Default';\nimport Button from '../../../Components/UI/Button';\n\nfunction ButtonPage(props) {\n\n\n    const buttons_shape_codes = `import Button from './Components/UI/Button';\n\nfunction ButtonsShape() {\n    <div className=\"p-4 py-7 flex gap-2 flex-wrap\">\n                        \n        <Button>Default</Button>\n        <Button shape=\"none\">No Round</Button>\n        <Button shape=\"curved\">Curved</Button>\n        <Button shape=\"full\">Fully Rounded</Button>\n\n    </div>\n}\n\nexport default ButtonsShape;`\n\n\nconst solid_button_codes = `import Button from './Components/UI/Button';\n\nfunction SolidButtons() {\n    <div className=\"p-4 py-7 flex gap-2 flex-wrap\">\n                        \n        <Button> Default </Button>\n        <Button color=\"primary\"> Primary </Button>\n        <Button color=\"info\"> Info </Button>\n        <Button color=\"success\"> Success </Button>\n        <Button color=\"warning\"> Warning </Button>\n        <Button color=\"danger\"> Danger </Button>\n        <Button color=\"muted\"> Muted </Button>\n\n    </div>\n}\n\nexport default SolidButtons;`\n\n\nconst link_button_codes = `import Button from './Components/UI/Button';\n\nfunction SolidButtons() {\n    <div className=\"p-4 py-7 flex gap-2 flex-wrap\">\n                        \n        <Button to=\"#\">Button Link</Button>\n        <Button to=\"#\" target=\"_blank\" shape='curved'>Link Target</Button>\n        <Button to=\"#\" color=\"primary\">Link Button</Button>\n        <Button to=\"https://google.com\" rel=\"\" target=\"_blank\" shape='curved'>Button</Button>\n\n    </div>\n}\n\nexport default SolidButtons;`\n\n    return (\n        <div>\n            \n            <div className='mb-10'>\n                <h1 className=\"text-dark dark:text-white font-bold text-4xl\">\n                    Button\n                </h1>\n                <div className='text-muted-400'>\n                    <span>Buttons allow users to take actions, and make choices, with a single tap.</span>\n                </div>\n            </div>\n\n\n\n            <div className='mb-10' id='buttons_shape'>\n\n                <div className='mb-1'>\n                    <h4 className='font-heading text-xl font-medium leading-normal text-muted-800 dark:text-white'>\n                        Button's shapes\n                    </h4>\n                </div>\n\n                <DefaultCard className='!p-0 overflow-hidden'>\n                    \n                    <div className=\"p-4 py-7 flex gap-2 flex-wrap\">\n                        \n                        <Button>Default</Button>\n                        <Button shape=\"straight\">No Round</Button>\n                        <Button shape=\"curved\">Curved</Button>\n                        <Button shape=\"full\">Fully Rounded</Button>\n                    \n                    </div>\n\n                    <DefaultCardFooter>\n                        <CodeDisplay>{buttons_shape_codes}</CodeDisplay>\n                    </DefaultCardFooter>\n                </DefaultCard>\n\n            </div>\n\n\n            <div className='mb-8' id='color_buttons'>\n\n                <div className='mb-1'>\n                    <h4 className='font-heading text-xl font-medium leading-normal text-muted-800 dark:text-white'>\n                        Solid Buttons\n                    </h4>\n                </div>\n\n                <DefaultCard className='!p-0 overflow-hidden'>\n                    \n                    <div className=\"p-4 py-7 flex gap-2 flex-wrap\">\n                        \n                        <Button>Default</Button>\n                        <Button color=\"primary\">Primary</Button>\n                        <Button color=\"info\">Info</Button>\n                        <Button color=\"success\">Success</Button>\n                        <Button color=\"warning\">Warning</Button>\n                        <Button color=\"danger\">Danger</Button>\n                        <Button color=\"muted\">Muted</Button>\n                    \n                    </div>\n\n                    <DefaultCardFooter>\n                        <CodeDisplay>{solid_button_codes}</CodeDisplay>\n                    </DefaultCardFooter>\n                </DefaultCard>\n\n            </div>\n\n\n            <div className='mb-8' id='color_buttons'>\n\n                <div className='mb-1'>\n                    <h4 className='font-heading text-xl font-medium leading-normal text-muted-800 dark:text-white'>\n                        Button Links\n                    </h4>\n                </div>\n\n                <DefaultCard className='!p-0 overflow-hidden'>\n                    \n                    <div className=\"p-4 py-7 flex gap-2 flex-wrap\">\n                        \n                        <Button to=\"#\">Button Link</Button>\n                        <Button to=\"#\" target=\"_blank\" shape='curved'>Link Target</Button>\n                        <Button to=\"#\" color=\"primary\">Link Button</Button>\n                        <Button to=\"https://google.com\" rel=\"\" target=\"_blank\" shape='curved'>Button</Button>\n                    \n                    </div>\n\n                    <DefaultCardFooter>\n                        <CodeDisplay>{link_button_codes}</CodeDisplay>\n                    </DefaultCardFooter>\n                </DefaultCard>\n\n            </div>\n\n            <div className='mb-8' id='color_buttons'>\n\n                <div className='mb-1'>\n                    <h4 className='font-heading text-xl font-medium leading-normal text-muted-800 dark:text-white'>\n                        Buttons Size\n                    </h4>\n                </div>\n\n                <DefaultCard className='!p-0 overflow-hidden'>\n                    \n                    <div className='p-4 py-2 pt-6 '>\n                        <h4 className='text-md text-muted-800 dark:text-white mb-1'>\n                            Small Button\n                        </h4>\n                        <div className=\"flex gap-2 flex-wrap\">\n                            <Button size=\"sm\">Button</Button>\n                            <Button size=\"sm\" color=\"primary\">Button</Button>\n                        </div>\n                    </div>\n                    \n                    <div className='p-4 py-2'>\n                        <h4 className='text-md text-muted-800 dark:text-white mb-1'>\n                            Medium Button\n                        </h4>\n                        <div className=\"flex gap-2 flex-wrap\">\n                            <Button>Button</Button>\n                            <Button color=\"primary\">Button</Button>\n                        </div>\n                    </div>\n                    \n                    <div className='p-4 py-2'>\n                        <h4 className='text-md text-muted-800 dark:text-white mb-1'>\n                            Large Button\n                        </h4>\n                        <div className=\"flex gap-2 flex-wrap\">\n                            <Button size=\"xl\">Button</Button>\n                            <Button size=\"xl\" color=\"primary\">Button</Button>\n                        </div>\n                    </div>\n\n                    \n                    <div className='p-4 py-2 pb-6'>\n                        <h4 className='text-md text-muted-800 dark:text-white mb-1'>\n                            Extra Large Button\n                        </h4>\n                        <div className=\"flex gap-2 flex-wrap\">\n                            <Button size=\"xxl\">Button</Button>\n                            <Button size=\"xxl\" color=\"primary\">Button</Button>\n                        </div>\n                    </div>\n\n                    <DefaultCardFooter>\n                        <CodeDisplay>{link_button_codes}</CodeDisplay>\n                    </DefaultCardFooter>\n                </DefaultCard>\n\n            </div>\n                \n\n        </div>\n    );\n}\n\nexport default ButtonPage;"],"names":["hljs","registerLanguage","javascript","xml","_ref","children","codeRef","useRef","useEffect","highlightBlock","current","_jsx","className","ref","style","backgroundColor","Alert","React","props","MuiAlert","_objectSpread","elevation","variant","open","message","onClose","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","severity","sx","width","_useState","useState","_useState2","_slicedToArray","setOpen","_useState3","_useState4","toast","setToastOpen","_jsxs","RoundedButton","onClick","text","textArea","document","createElement","value","body","appendChild","select","execCommand","removeChild","copyToClipboard","ContentCopy","Code","Toast","event","reason","Collapse","in","CodeHLJS","app","title","panels","error","ui","defaultShape","button","_ref$color","color","_objectWithoutProperties","_excluded","baseClasses","concat","classes","trim","IconButton","RoundedOptions","ColorOptions","SizeOptions","_ref2","_AppConfig$ui$default","_ref2$shape","shadow","shape","AppConfig","to","size","type","_excluded2","buttonClasses","roundedClass","colorClasses","sizeClasses","_Fragment","Link","DefaultCard","_ref$className","join","DefaultCardHeader","DefaultCardFooter","DefaultCardText","_ref3","_ref3$className","_ref3$title","_ref3$text","_ref3$color","link_button_codes","id","Button","CodeDisplay","target","rel"],"sourceRoot":""}